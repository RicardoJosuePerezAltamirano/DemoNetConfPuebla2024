//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using MauiAppNet9Demo.Shared.Abstractions;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Routing;

namespace MauiAppNet9Demo.Shared.Pages
{
    public partial class FotosComponent:ComponentBase
    {
        [Inject]
        public NavigationManager NavigationManager { get; set; }
     
        private bool isTakingPhoto = false;
        public List<string> Images { get; set; }

        private bool isNavigating = false;

        //[Inject]
        //public LocationServices LocationServices { get; set; }


        [Inject]
        public IPhotoServices PhotoServices { get; set; }

        protected override async Task OnInitializedAsync()
        {
            Images = new List<string>();
            NavigationManager.LocationChanged += OnLocationChanged;

            PhotoServices.PropertyChanged += (sender, e) =>
            {
                if (e.PropertyName == nameof(PhotoServices.SourceImage))
                {
                    Images.Add(PhotoServices.SourceImage);
                    System.Diagnostics.Debug.WriteLine("imagen desde servicio " + PhotoServices.SourceImage);
                    //System.Diagnostics.Debug.WriteLine("imagen desde local " + SelfieImage);
                    StateHasChanged();
                    isTakingPhoto = false;
                }
            };
        }

        private async Task TakePhoto()
        {
            isTakingPhoto = true;
            await PhotoServices.TakePhoto();
        }

        private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
        {
            if (isTakingPhoto) return;
            isNavigating = true;
            if (sender is NavigationManager navigationManager && !navigationManager.Uri.ToLower().Contains("/home"))
            {
                if (isTakingPhoto) return;
                if (!isNavigating)
                {
                    NavigationManager.NavigateTo("/home");
                }
            }
        }

    }
}